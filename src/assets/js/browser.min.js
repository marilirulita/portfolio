/* browser.js v1.0.1 | @ajlkn | MIT licensed */
const browser = (function () {
  var t = {
    name: null, version: null, os: null, osVersion: null, touch: null, mobile: null, _canUse: null, canUse(e) { t._canUse || (t._canUse = document.createElement('div')); const n = t._canUse.style; const r = e.charAt(0).toUpperCase() + e.slice(1); return e in n || `Moz${r}` in n || `Webkit${r}` in n || `O${r}` in n || `ms${r}` in n; }, init() { for (var e = navigator.userAgent, n = 'other', r = 0, i = [['firefox', /Firefox\/([0-9\.]+)/], ['bb', /BlackBerry.+Version\/([0-9\.]+)/], ['bb', /BB[0-9]+.+Version\/([0-9\.]+)/], ['opera', /OPR\/([0-9\.]+)/], ['opera', /Opera\/([0-9\.]+)/], ['edge', /Edge\/([0-9\.]+)/], ['safari', /Version\/([0-9\.]+).+Safari/], ['chrome', /Chrome\/([0-9\.]+)/], ['ie', /MSIE ([0-9]+)/], ['ie', /Trident\/.+rv:([0-9]+)/]], o = 0; o < i.length; o++) if (e.match(i[o][1])) { n = i[o][0], r = parseFloat(RegExp.$1); break; } for (t.name = n, t.version = r, n = 'other', i = [['ios', /([0-9_]+) like Mac OS X/, function (e) { return e.replace('_', '.').replace('_', ''); }], ['ios', /CPU like Mac OS X/, function (e) { return 0; }], ['wp', /Windows Phone ([0-9\.]+)/, null], ['android', /Android ([0-9\.]+)/, null], ['mac', /Macintosh.+Mac OS X ([0-9_]+)/, function (e) { return e.replace('_', '.').replace('_', ''); }], ['windows', /Windows NT ([0-9\.]+)/, null], ['bb', /BlackBerry.+Version\/([0-9\.]+)/, null], ['bb', /BB[0-9]+.+Version\/([0-9\.]+)/, null], ['linux', /Linux/, null], ['bsd', /BSD/, null], ['unix', /X11/, null]], o = r = 0; o < i.length; o++) if (e.match(i[o][1])) { n = i[o][0], r = parseFloat(i[o][2] ? i[o][2](RegExp.$1) : RegExp.$1); break; }n == 'mac' && 'ontouchstart' in window && (screen.width == 1024 && screen.height == 1366 || screen.width == 834 && screen.height == 1112 || screen.width == 810 && screen.height == 1080 || screen.width == 768 && screen.height == 1024) && (n = 'ios'), t.os = n, t.osVersion = r, t.touch = t.os == 'wp' ? navigator.msMaxTouchPoints > 0 : !!('ontouchstart' in window), t.mobile = t.os == 'wp' || t.os == 'android' || t.os == 'ios' || t.os == 'bb'; },
  }; return t.init(), t;
}()); !(function (e, n) { typeof define === 'function' && define.amd ? define([], n) : typeof exports === 'object' ? module.exports = n() : e.browser = n(); }(this, () => browser));
